import requests
from aiogram import Bot, Dispatcher, types
from aiogram.filters import CommandStart
from aiogram.types import Message
import asyncio
import os

from dotenv import load_dotenv

load_dotenv()

TOKEN = os.getenv("BOT_TOKEN")
API_URL_REGISTER = os.getenv("API_URL_REGISTER")  # http://<server_ip>:8000/api/users/register/
API_URL_REQUEST = os.getenv("API_URL_REQUEST")    # http://<server_ip>:8000/api/users/requests/

bot = Bot(token=TOKEN)
dp = Dispatcher()

async def check_api():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API –ø–µ—Ä–µ–¥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π"""
    try:
        r = requests.options(API_URL_REGISTER)
        print(f"üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ API {API_URL_REGISTER}: —Å—Ç–∞—Ç—É—Å {r.status_code}")
    except Exception as e:
        print(f"‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ: {e}")

@dp.message(CommandStart())
async def start(message: Message):
    print(f"üì• –ü–æ–ª—É—á–µ–Ω–æ /start –æ—Ç {message.from_user.id} ({message.from_user.username})")
    
    await check_api()

    data = {
        "telegram_id": message.from_user.id,
        "username": message.from_user.username,
        "first_name": message.from_user.first_name,
        "last_name": message.from_user.last_name
    }
    print(f"üì¶ –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {data}")

    try:
        r = requests.post(API_URL_REGISTER, json=data, timeout=5)
        print(f"üì° –°—Ç–∞—Ç—É—Å: {r.status_code}, –û—Ç–≤–µ—Ç: {r.text}")
        if r.status_code == 201:
            await message.answer("‚úÖ –¢—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!")
        elif r.status_code == 400:
            await message.answer("‚ÑπÔ∏è –¢—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω.")
        else:
            await message.answer(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {r.status_code}")
    except requests.exceptions.RequestException as e:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º: {e}")

@dp.message()
async def handle_message(message: Message):
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    request_data = {
        "telegram_id": message.from_user.id,
        "request_text": message.text
    }
    try:
        r = requests.post(API_URL_REQUEST, json=request_data)
        if r.status_code == 201:
            await message.answer("‚úÖ –í–∞—à –∑–∞–ø—Ä–æ—Å —Å–æ—Ö—Ä–∞–Ω—ë–Ω!")
        else:
            await message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å.")
    except Exception as e:
        await message.answer(f"–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º: {e}")

async def main():
    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
