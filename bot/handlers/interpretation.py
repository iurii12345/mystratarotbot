def interpret_single_card(card, is_reversed):
    card_name = card.get("name", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞—Ä—Ç–∞")
    interpretation = f"üìñ **–¢–æ–ª–∫–æ–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã {card_name}**\n\n"
    if is_reversed:
        interpretation += f"üîÑ **–ü–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ:**\n{card.get('rdesc', '–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')}\n\n"
        interpretation += f"üí° **–°–æ–≤–µ—Ç:** {card.get('radvice', '–ü—Ä–∏–º–∏—Ç–µ —Å–∏—Ç—É–∞—Ü–∏—é –∫–∞–∫ –µ—Å—Ç—å')}"
    else:
        interpretation += f"‚¨ÜÔ∏è **–ü—Ä—è–º–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ:**\n{card.get('desc', '–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')}\n\n"
        interpretation += f"üí° **–°–æ–≤–µ—Ç:** {card.get('advice', '–î–æ–≤–µ—Ä—å—Ç–µ—Å—å —Å–≤–æ–µ–π –∏–Ω—Ç—É–∏—Ü–∏–∏')}"
    return interpretation

def interpret_daily_spread(cards, positions, is_reversed_list):
    interpretation = "üåÖ **–¢–æ–ª–∫–æ–≤–∞–Ω–∏–µ —Ä–∞—Å–∫–ª–∞–¥–∞ –Ω–∞ –¥–µ–Ω—å**\n\n"
    parts = []
    for card, pos, rev in zip(cards, positions, is_reversed_list):
        card_name = card.get("name", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞—Ä—Ç–∞")
        if rev:
            desc = card.get("rdesc", "–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            advice = card.get("radvice", "–ü—Ä–∏–º–∏—Ç–µ —Å–∏—Ç—É–∞—Ü–∏—é –∫–∞–∫ –µ—Å—Ç—å")
            parts.append(
                f"**{pos}** ‚Äî {card_name}\nüîÑ –ü–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ:\n{desc}\nüí° –°–æ–≤–µ—Ç: {advice}\n"
            )
        else:
            desc = card.get("desc", "–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            advice = card.get("advice", "–î–æ–≤–µ—Ä—å—Ç–µ—Å—å —Å–≤–æ–µ–π –∏–Ω—Ç—É–∏—Ü–∏–∏")
            parts.append(
                f"**{pos}** ‚Äî {card_name}\n‚¨ÜÔ∏è –ü—Ä—è–º–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ:\n{desc}\nüí° –°–æ–≤–µ—Ç: {advice}\n"
            )
    interpretation += "\n".join(parts)
    return interpretation

def interpret_love_spread(cards, positions, is_reversed_list):
    interpretation = "üíï **–¢–æ–ª–∫–æ–≤–∞–Ω–∏–µ —Ä–∞—Å–∫–ª–∞–¥–∞ –Ω–∞ –ª—é–±–æ–≤—å**\n\n"
    parts = []
    for card, pos, rev in zip(cards, positions, is_reversed_list):
        card_name = card.get("name", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞—Ä—Ç–∞")
        if rev:
            desc = card.get("rdesc", "–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            advice = card.get("radvice", "–ü—Ä–∏–º–∏—Ç–µ —Å–∏—Ç—É–∞—Ü–∏—é –∫–∞–∫ –µ—Å—Ç—å")
            parts.append(
                f"**{pos}** ‚Äî {card_name}\nüîÑ –ü–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ:\n{desc}\nüí° –°–æ–≤–µ—Ç: {advice}\n"
            )
        else:
            desc = card.get("desc", "–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            advice = card.get("advice", "–î–æ–≤–µ—Ä—å—Ç–µ—Å—å —Å–≤–æ–µ–π –∏–Ω—Ç—É–∏—Ü–∏–∏")
            parts.append(
                f"**{pos}** ‚Äî {card_name}\n‚¨ÜÔ∏è –ü—Ä—è–º–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ:\n{desc}\nüí° –°–æ–≤–µ—Ç: {advice}\n"
            )
    interpretation += "\n".join(parts)
    return interpretation

def interpret_work_spread(cards, positions, is_reversed_list):
    interpretation = "üíº **–¢–æ–ª–∫–æ–≤–∞–Ω–∏–µ —Ä–∞—Å–∫–ª–∞–¥–∞ –Ω–∞ —Ä–∞–±–æ—Ç—É**\n\n"
    parts = []
    for card, pos, rev in zip(cards, positions, is_reversed_list):
        card_name = card.get("name", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞—Ä—Ç–∞")
        if rev:
            desc = card.get("rdesc", "–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            advice = card.get("radvice", "–ü—Ä–∏–º–∏—Ç–µ —Å–∏—Ç—É–∞—Ü–∏—é –∫–∞–∫ –µ—Å—Ç—å")
            parts.append(
                f"**{pos}** ‚Äî {card_name}\nüîÑ –ü–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ:\n{desc}\nüí° –°–æ–≤–µ—Ç: {advice}\n"
            )
        else:
            desc = card.get("desc", "–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            advice = card.get("advice", "–î–æ–≤–µ—Ä—å—Ç–µ—Å—å —Å–≤–æ–µ–π –∏–Ω—Ç—É–∏—Ü–∏–∏")
            parts.append(
                f"**{pos}** ‚Äî {card_name}\n‚¨ÜÔ∏è –ü—Ä—è–º–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ:\n{desc}\nüí° –°–æ–≤–µ—Ç: {advice}\n"
            )
    interpretation += "\n".join(parts)
    return interpretation

def interpret_celtic_cross(cards, positions, is_reversed_list):
    interpretation = "üè∞ **–¢–æ–ª–∫–æ–≤–∞–Ω–∏–µ —Ä–∞—Å–∫–ª–∞–¥–∞ ¬´–ö–µ–ª—å—Ç—Å–∫–∏–π –∫—Ä–µ—Å—Ç¬ª**\n\n"
    parts = []
    for card, pos, rev in zip(cards, positions, is_reversed_list):
        card_name = card.get("name", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞—Ä—Ç–∞")
        if rev:
            desc = card.get("rdesc", "–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            advice = card.get("radvice", "–ü—Ä–∏–º–∏—Ç–µ —Å–∏—Ç—É–∞—Ü–∏—é –∫–∞–∫ –µ—Å—Ç—å")
            parts.append(
                f"**{pos}** ‚Äî {card_name}\nüîÑ –ü–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ:\n{desc}\nüí° –°–æ–≤–µ—Ç: {advice}\n"
            )
        else:
            desc = card.get("desc", "–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            advice = card.get("advice", "–î–æ–≤–µ—Ä—å—Ç–µ—Å—å —Å–≤–æ–µ–π –∏–Ω—Ç—É–∏—Ü–∏–∏")
            parts.append(
                f"**{pos}** ‚Äî {card_name}\n‚¨ÜÔ∏è –ü—Ä—è–º–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ:\n{desc}\nüí° –°–æ–≤–µ—Ç: {advice}\n"
            )
    interpretation += "\n".join(parts)
    return interpretation
